(self.webpackChunkangular_latest=self.webpackChunkangular_latest||[]).push([[574],{"./src/stories/kanban/kanban.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Swimlane:()=>Swimlane,Workflow:()=>Workflow,__namedExportsOrder:()=>__namedExportsOrder,default:()=>kanban_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var kanban_componentngResource=__webpack_require__("./src/stories/kanban/kanban.component.css?ngResource"),kanban_componentngResource_default=__webpack_require__.n(kanban_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),drag_drop=__webpack_require__("./node_modules/@angular/cdk/fesm2022/drag-drop.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs"),expansion=__webpack_require__("./node_modules/@angular/material/fesm2022/expansion.mjs");let ColumnNamesPipe=class ColumnNamesPipe{transform(data,allItems){const columnNames=[];return data.columns.forEach((column=>{columnNames.push(column)})),this.toggleCollapseSwimlane(data,allItems),columnNames}toggleCollapseSwimlane(column,allItems){allItems.forEach((data=>{const idealWidth=100/data.columns.length;data.columns.forEach((column=>{column.idealWidth=idealWidth,column.collapsed&&(column.idealWidth=10)}))}))}};ColumnNamesPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"columnNames",standalone:!0})],ColumnNamesPipe);var platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs");let KanbanComponent=class KanbanComponent{constructor(sanitizer){this.sanitizer=sanitizer,this.data=[],this.type="",this.tableHeaders=[]}drop(event){event.previousContainer===event.container?(0,drag_drop.HD)(event.container.data,event.previousIndex,event.currentIndex):(0,drag_drop.eg)(event.previousContainer.data,event.container.data,event.previousIndex,event.currentIndex),setTimeout((_=>{this.adjustColumnHeights(event.container.id),this.adjustColumnHeights(event.previousContainer.id)}))}ngAfterViewInit(){this.adjustColumnHeights()}adjustColumnHeights(only=""){let listing=this.kanbanLists;if(only){const swimlaneRow=document.querySelector("#"+only).getAttribute("customId");listing=this.kanbanLists._results.filter((list=>list.nativeElement.getAttribute("customId")===swimlaneRow))}if(listing){const columnHeights=listing.map((list=>Array.from(list.nativeElement.children).reduce(((height,child)=>{const childStyles=window.getComputedStyle(child),marginBottom=parseFloat(childStyles.marginBottom),paddingBottom=parseFloat(childStyles.paddingBottom);return height+child.offsetHeight+marginBottom+paddingBottom}),0))),maxHeight=Math.max(...columnHeights);listing.forEach((list=>{list.nativeElement.style.height=`${maxHeight}px`}))}}addAction($event,column){column.action?.event($event,column)}toggleCollapse(column){const collapsedColumns=this.data.filter((col=>col.collapsed)),remainingColumns=this.data.length-collapsedColumns.length;(remainingColumns>1&&!column.collapsed||remainingColumns>=1&&column.collapsed)&&(column.collapsed=!column.collapsed)}toggleCollapseSwimlane(column){this.data.forEach((swimlane=>{swimlane.columns.forEach((col=>{col.id===column.id&&(col.collapsed=!col.collapsed)}))}));const totalColumns=this.data[0].columns.length;let collapsedColumns=this.data.flatMap((swimlane=>swimlane.columns)).filter((col=>col.collapsed));collapsedColumns=collapsedColumns.reduce(((acc,current)=>acc.find((item=>item.id===current.id))?acc:acc.concat([current])),[]);const collapsedCount=collapsedColumns.length,remainingColumns=totalColumns-collapsedCount,remainingWidth=100-10*collapsedCount;this.data.forEach((swimlane=>{swimlane.columns.forEach((col=>{col.collapsed?remainingColumns?col.idealWidth=10:col.id===column.id&&(col.idealWidth=100-10*(totalColumns-1),col.collapsed=!1):col.idealWidth=remainingWidth/remainingColumns}))}))}toggleCollapseForWorkFlow(column,columnNumber){const collapsedColumns=this.tableHeaders.filter((col=>col.collapsed)),remainingColumns=this.tableHeaders.length-collapsedColumns.length;(remainingColumns>1&&!column.collapsed||remainingColumns>=1&&column.collapsed)&&(column.collapsed=!column.collapsed)}static#_=this.ctorParameters=()=>[{type:platform_browser.DomSanitizer}];static#_2=this.propDecorators={data:[{type:core.Input}],type:[{type:core.Input}],tableHeaders:[{type:core.Input}],kanbanLists:[{type:core.ViewChildren,args:["kanbanList"]}]}};KanbanComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"shorterloop-kanban",standalone:!0,imports:[common.CommonModule,drag_drop.ad,icon.m_,expansion.MY,ColumnNamesPipe],template:'\x3c!-- kanban.component.html --\x3e\n<div class="kanban-board" cdkDropListGroup *ngIf="!type">\n  <ng-container *ngFor="let column of data">\n    <div [style.width.%]="!column?.collapsed? (100 / data.length): 10" class="kanban-column">\n      <div class="kanban-column-header">\n        <h2 [class.collapsed]="column?.collapsed">\n          <span *ngIf="!column?.collapsed">{{ column.heading }}</span>\n\n          <span class="expand-icon" *ngIf="column?.toggleColumn" [class.icon_center]="column?.collapsed"\n            (click)="toggleCollapse(column)">\n            \x3c!-- Custom symbols for expand and collapse --\x3e\n            <ng-container *ngIf="!column?.collapsed; else collapsedIcon">\n              <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px"\n                fill="#5f6368">\n                <path d="M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z" />\n              </svg>\n            </ng-container>\n            <ng-template #collapsedIcon>\n              <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px"\n                fill="#5f6368">\n                <path d="m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z" />\n              </svg>\n            </ng-template>\n          </span>\n        </h2>\n      </div>\n\n      <div class="kanban-column-data">\n        <div *ngIf="column?.collapsed" class="vertical-writing">\n          [{{column.tasks?.length}}] {{column.heading}}\n        </div>\n        <div cdkDropList [cdkDropListData]="column.tasks" class="kanban-list" #kanbanList\n          (cdkDropListDropped)="drop($event)" *ngIf="!column?.collapsed">\n          <div class="kanban-item" *ngFor="let task of column.tasks" cdkDrag\n            [style.borderTop]="task?.borderColor ? \'3px solid \' + task?.borderColor : \'\'">\n            <div class="task-card">\n              \x3c!-- Header --\x3e\n              <div class="task-header">\n                <ng-container *ngFor="let item of task.header">\n                  <ng-container *ngIf="item.type === \'link\'">\n                    <span class="link">\n                      <a [href]="item.url">{{ item.label }}</a>\n                    </span>\n                  </ng-container>\n                  <ng-container *ngIf="item.type === \'chip\'">\n                    <span class="chip-container">\n                      <span *ngFor="let chip of item.value" class="chip" [style.backgroundColor]="chip?.backgroundColor"\n                        [style.color]="chip?.foregroundColor">{{\n                        chip?.value\n                        }}</span>\n                    </span>\n                  </ng-container>\n                  \x3c!-- Add more header types as needed --\x3e\n                </ng-container>\n              </div>\n\n              \x3c!-- Body --\x3e\n              <div class="task-body">\n                <p>{{ task.body.description }}</p>\n              </div>\n\n              \x3c!-- Footer --\x3e\n              <div class="task-footer">\n                <ng-container *ngFor="let item of task.footer">\n                  <div class="avatar" *ngIf="item.type === \'avatar\'">\n                    <img *ngIf="item?.photo" [src]="item?.photo" alt="{{ item.label }}" />\n                    <span>{{ item.label }}</span>\n                  </div>\n                  <ng-container *ngIf="item.type === \'budget\'">\n                    <div>Budget: {{ item.value }}</div>\n                  </ng-container>\n                  <ng-container *ngIf="item.type === \'timeFrame\'">\n                    <div>Time Frame: {{ item.value }}</div>\n                  </ng-container>\n                  \x3c!-- Add more footer types as needed --\x3e\n                </ng-container>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class="kanban-column-action" *ngIf="column?.action && !column?.collapsed">\n          <a class="add-button" (click)="addAction($event, column)">{{ column?.action?.label }}</a>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n\x3c!-- Swimlane --\x3e\n<ng-container *ngIf="type === \'swimlane\'">\n  <div class="kanban-board">\n    <ng-container *ngFor="let column of data[0] | columnNames: data">\n      <div [style.width.%]="column?.idealWidth" class="kanban-column">\n        <div class="kanban-column-header">\n          <h2 [class.collapsed]="column?.collapsed">\n            <span *ngIf="!column?.collapsed">{{ column.heading }}</span>\n\n            <span class="expand-icon" *ngIf="column?.toggleColumn" [class.icon_center]="column?.collapsed"\n              (click)="toggleCollapseSwimlane(column)">\n              \x3c!-- Custom symbols for expand and collapse --\x3e\n              <ng-container *ngIf="!column?.collapsed; else collapsedIcon">\n                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px"\n                  fill="#5f6368">\n                  <path d="M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z" />\n                </svg>\n              </ng-container>\n              <ng-template #collapsedIcon>\n                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px"\n                  fill="#5f6368">\n                  <path d="m321-80-71-71 329-329-329-329 71-71 400 400L321-80Z" />\n                </svg>\n              </ng-template>\n            </span>\n          </h2>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <section cdkDropListGroup class="swimlane-section">\n    <details open *ngFor="let column of data">\n      <summary>{{ column?.heading }}</summary>\n\n      <div class="kanban-board">\n        <div class="kanban-column-data" *ngFor="let dataColumn of column.columns"\n          [style.width.%]="dataColumn?.idealWidth" [class.padding_0]="dataColumn?.collapsed">\n          <div *ngIf="dataColumn?.collapsed" class="vertical-writing">\n            [{{dataColumn.tasks?.length}}] {{dataColumn.heading}}\n          </div>\n\n          <div cdkDropList [cdkDropListData]="dataColumn.tasks" class="kanban-list"\n            attr.customId="swimlane_row_{{column?.id}}" #kanbanList (cdkDropListDropped)="drop($event)"\n            *ngIf="!dataColumn?.collapsed">\n            <div class="kanban-item" *ngFor="let task of dataColumn.tasks" cdkDrag\n              [style.borderTop]="task?.borderColor ? \'3px solid \' + task?.borderColor : \'\'">\n              <div class="task-card">\n                \x3c!-- Header --\x3e\n                <div class="task-header">\n                  <ng-container *ngFor="let item of task.header">\n                    <ng-container *ngIf="item.type === \'link\'">\n                      <span class="link">\n                        <a [href]="item.url">{{ item.label }}</a>\n                      </span>\n                    </ng-container>\n                    <ng-container *ngIf="item.type === \'chip\'">\n                      <span class="chip-container">\n                        <span *ngFor="let chip of item.value" class="chip"\n                          [style.backgroundColor]="chip?.backgroundColor" [style.color]="chip?.foregroundColor">{{\n                          chip?.value\n                          }}</span>\n                      </span>\n                    </ng-container>\n                    \x3c!-- Add more header types as needed --\x3e\n                  </ng-container>\n                </div>\n\n                \x3c!-- Body --\x3e\n                <div class="task-body">\n                  <p>{{ task.body.description }}</p>\n                </div>\n\n                \x3c!-- Footer --\x3e\n                <div class="task-footer">\n                  <ng-container *ngFor="let item of task.footer">\n                    <div class="avatar" *ngIf="item.type === \'avatar\'">\n                      <img *ngIf="item?.photo" [src]="item?.photo" alt="{{ item.label }}" />\n                      <span>{{ item.label }}</span>\n                    </div>\n                    <ng-container *ngIf="item.type === \'budget\'">\n                      <div>Budget: {{ item.value }}</div>\n                    </ng-container>\n                    <ng-container *ngIf="item.type === \'timeFrame\'">\n                      <div>Time Frame: {{ item.value }}</div>\n                    </ng-container>\n                    \x3c!-- Add more footer types as needed --\x3e\n                  </ng-container>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class="kanban-column-action" *ngIf="column?.action && !column?.collapsed">\n            <a class="add-button" (click)="addAction($event, column)">{{ column?.action?.label }}</a>\n          </div>\n        </div>\n      </div>\n    </details>\n  </section>\n</ng-container>\n\n\x3c!-- Workflow  --\x3e\n<ng-container *ngIf="type === \'workflow\'">\n  <table>\n    <thead>\n      <tr>\n        <th *ngFor="let th of tableHeaders; let i=index" [style.width.%]="100 / tableHeaders.length">\n          {{ th.label }}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor="let opportunity of data; let i = index">\n        <tr *ngFor="let solution of opportunity.solutions; let j = index">\n          <ng-container *ngIf="j === 0">\n            <td [attr.rowspan]="opportunity.solutions.length" class="odd-section">\n              <div class="kanban-item"\n                [style.borderTop]="opportunity.opportunity?.borderColor ? \'3px solid \' + opportunity.opportunity?.borderColor : \'\'">\n                <div class="task-card">\n                  \x3c!-- Header --\x3e\n                  <div class="task-header" *ngIf="opportunity.opportunity.header">\n                    <ng-container *ngFor="let item of opportunity.opportunity.header">\n                      <ng-container *ngIf="item.type === \'link\'">\n                        <span class="link">\n                          <a [href]="item.url">{{ item.label }}</a>\n                        </span>\n                      </ng-container>\n                      <ng-container *ngIf="item.type === \'chip\'">\n                        <span class="chip-container">\n                          <span *ngFor="let chip of item.value" class="chip"\n                            [style.backgroundColor]="chip?.backgroundColor" [style.color]="chip?.foregroundColor">{{\n                            chip?.value\n                            }}</span>\n                        </span>\n                      </ng-container>\n                      \x3c!-- Add more header types as needed --\x3e\n                    </ng-container>\n                  </div>\n\n                  \x3c!-- Body --\x3e\n                  <div class="task-body" *ngIf="opportunity.opportunity.body.description">\n                    <p>{{ opportunity.opportunity.body.description }}</p>\n                  </div>\n\n                  \x3c!-- Footer --\x3e\n                  <div class="task-footer" *ngIf="opportunity.opportunity.footer">\n                    <ng-container *ngFor="let item of opportunity.opportunity.footer">\n                      <div class="avatar" *ngIf="item.type === \'avatar\'">\n                        <img *ngIf="item?.photo" [src]="item?.photo" alt="{{ item.label }}" />\n                        <span>{{ item.label }}</span>\n                      </div>\n                      <ng-container *ngIf="item.type === \'budget\'">\n                        <div>Budget: {{ item.value }}</div>\n                      </ng-container>\n                      <ng-container *ngIf="item.type === \'timeFrame\'">\n                        <div>Time Frame: {{ item.value }}</div>\n                      </ng-container>\n                      \x3c!-- Add more footer types as needed --\x3e\n                    </ng-container>\n                  </div>\n                </div>\n              </div>\n              <div *ngIf="opportunity.opportunity?.action" class="workflow-kanban-action">\n                <a (click)="addAction($event, opportunity.opportunity)" class="d-flex">\n                  <span *ngIf="opportunity.opportunity?.action?.icon"\n                    [innerHTML]="sanitizer.bypassSecurityTrustHtml(opportunity.opportunity?.action?.icon)"></span>\n\n                  <span>{{ opportunity.opportunity?.action?.label\n                    }}</span>\n                </a>\n              </div>\n            </td>\n          </ng-container>\n\n          <td>\n            <div class="kanban-item"\n              [style.borderTop]="solution.solution?.borderColor ? \'3px solid \' + solution.solution?.borderColor : \'\'">\n              <div class="task-card">\n                \x3c!-- Header --\x3e\n                <div class="task-header" *ngIf="solution.solution.header">\n                  <ng-container *ngFor="let item of solution.solution.header">\n                    <ng-container *ngIf="item.type === \'link\'">\n                      <span class="link">\n                        <a [href]="item.url">{{ item.label }}</a>\n                      </span>\n                    </ng-container>\n                    <ng-container *ngIf="item.type === \'chip\'">\n                      <span class="chip-container">\n                        <span *ngFor="let chip of item.value" class="chip"\n                          [style.backgroundColor]="chip?.backgroundColor" [style.color]="chip?.foregroundColor">{{\n                          chip?.value\n                          }}</span>\n                      </span>\n                    </ng-container>\n                    \x3c!-- Add more header types as needed --\x3e\n                  </ng-container>\n                </div>\n\n                \x3c!-- Body --\x3e\n                <div class="task-body" *ngIf="solution.solution.body.description">\n                  <p>{{ solution.solution.body.description }}</p>\n                </div>\n\n                \x3c!-- Footer --\x3e\n                <div class="task-footer" *ngIf="solution.solution.footer">\n                  <ng-container *ngFor="let item of solution.solution.footer">\n                    <div class="avatar" *ngIf="item.type === \'avatar\'">\n                      <img *ngIf="item?.photo" [src]="item?.photo" alt="{{ item.label }}" />\n                      <span>{{ item.label }}</span>\n                    </div>\n                    <ng-container *ngIf="item.type === \'budget\'">\n                      <div>Budget: {{ item.value }}</div>\n                    </ng-container>\n                    <ng-container *ngIf="item.type === \'timeFrame\'">\n                      <div>Time Frame: {{ item.value }}</div>\n                    </ng-container>\n                    \x3c!-- Add more footer types as needed --\x3e\n                  </ng-container>\n                </div>\n              </div>\n            </div>\n            <div *ngIf="solution.solution?.action" class="workflow-kanban-action">\n              <a (click)="addAction($event, solution.solution)" class="d-flex">\n                <span *ngIf="solution.solution?.action?.icon"\n                  [innerHTML]="sanitizer.bypassSecurityTrustHtml(solution.solution?.action?.icon)"></span>\n\n                <span>{{ solution.solution?.action?.label\n                  }}</span>\n              </a>\n            </div>\n          </td>\n\n          <td class="odd-section" cdkDropListGroup cdkDropList [cdkDropListData]="solution.experiments"\n            (cdkDropListDropped)="drop($event)">\n            <ng-container *ngFor="let experiment of solution.experiments" class="kanban-list">\n              <div class="kanban-item" cdkDrag\n                [style.borderTop]="experiment?.borderColor ? \'3px solid \' + experiment?.borderColor : \'\'">\n                <div class="task-card">\n                  \x3c!-- Header --\x3e\n                  <div class="task-header" *ngIf="experiment.header">\n                    <ng-container *ngFor="let item of experiment.header">\n                      <ng-container *ngIf="item.type === \'link\'">\n                        <span class="link">\n                          <a [href]="item.url">{{ item.label }}</a>\n                        </span>\n                      </ng-container>\n                      <ng-container *ngIf="item.type === \'chip\'">\n                        <span class="chip-container">\n                          <span *ngFor="let chip of item.value" class="chip"\n                            [style.backgroundColor]="chip?.backgroundColor" [style.color]="chip?.foregroundColor">{{\n                            chip?.value\n                            }}</span>\n                        </span>\n                      </ng-container>\n                      \x3c!-- Add more header types as needed --\x3e\n                    </ng-container>\n                  </div>\n\n                  \x3c!-- Body --\x3e\n                  <div class="task-body" *ngIf="experiment.body.description">\n                    <p>{{ experiment.body.description }}</p>\n                  </div>\n\n                  \x3c!-- Footer --\x3e\n                  <div class="task-footer" *ngIf="experiment.footer">\n                    <ng-container *ngFor="let item of experiment.footer">\n                      <div class="avatar" *ngIf="item.type === \'avatar\'">\n                        <img *ngIf="item?.photo" [src]="item?.photo" alt="{{ item.label }}" />\n                        <span>{{ item.label }}</span>\n                      </div>\n                      <ng-container *ngIf="item.type === \'budget\'">\n                        <div>Budget: {{ item.value }}</div>\n                      </ng-container>\n                      <ng-container *ngIf="item.type === \'timeFrame\'">\n                        <div>Time Frame: {{ item.value }}</div>\n                      </ng-container>\n                      \x3c!-- Add more footer types as needed --\x3e\n                    </ng-container>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </td>\n        </tr>\n\n      </ng-container>\n    </tbody>\n  </table>\n</ng-container>',styles:[kanban_componentngResource_default()]})],KanbanComponent);const SVG_ICON='<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2 2.667a.667.667 0 0 0-.662.588l-.005.078v4.334a2.333 2.333 0 0 0 2.206 2.33l.128.003h8.723l-2.195 2.195a.67.67 0 0 0-.055.88l.055.063a.67.67 0 0 0 .88.055l.063-.055 3.333-3.333a1 1 0 0 0 .065-.075l.047-.073.036-.076.024-.07.016-.078.005-.04.003-.06-.002-.05-.012-.084-.02-.074-.029-.074-.035-.065-.042-.061-.056-.063-3.333-3.333a.667.667 0 0 0-.998.88l.055.062 2.195 2.196H3.667a1 1 0 0 1-.996-.904l-.004-.096V3.333A.667.667 0 0 0 2 2.667" fill="#573DF4"/></svg>',kanban_stories={title:"Components/Kanban",component:KanbanComponent,tags:["autodocs"],parameters:{docs:{description:{component:"This is a Kanban component that allows for managing tasks within columns and swimlanes. It supports drag-and-drop functionality and can be collapsed or expanded for a better user experience. The component showcases features like sorting cards, enabling drag-and-drop across swimlanes, showing or hiding empty rows, displaying item counts, and managing swimlane frozen rows."}}}},Default={parameters:{docs:{description:{story:"This example illustrates the default functionalities of the Kanban component. You can drag and drop cards across different states of the Kanban board by default."}}},args:{data:[{id:1,heading:"To Do",tasks:[{id:1,header:[{type:"link",label:"EP-1",url:"https://example.com"},{type:"chip",value:[{value:"To Do",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"}]}],body:{description:"User-Perceived Value Validation. User-Perceived Value Validation"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:2,header:[{type:"link",label:"EP-2",url:"https://another-example.com"},{type:"chip",value:[{value:"Tag 3",backgroundColor:"green"},{value:"Tag 4",backgroundColor:"orange"}]}],body:{description:"Description for Task 2"},footer:[{type:"avatar",label:"John Doe",photo:"https://picsum.photos/200"},{type:"budget",label:"Budget",value:"$200"},{type:"timeFrame",label:"Time Frame",value:"2 months"}],borderColor:"#4784fc"}],toggleColumn:!0,action:{label:"+ Add Experiment",event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},{id:2,heading:"In Progress",tasks:[{id:3,header:[{type:"link",label:"EP-3",url:"https://third-example.com"},{type:"chip",value:[{value:"Tag 5",backgroundColor:"purple"}]}],body:{description:"Description for Task 3"},footer:[{type:"avatar",label:"Jane Smith",photo:"https://picsum.photos/202"},{type:"budget",label:"Budget",value:"$300"},{type:"timeFrame",label:"Time Frame",value:"3 months"}],borderColor:"#FFCA11"},{id:4,header:[{type:"link",label:"EP-4",url:"https://fourth-example.com"},{type:"chip",value:[{value:"Tag 6",backgroundColor:"brown"}]}],body:{description:"User-Perceived Value Validation"},footer:[{type:"avatar",label:"Michael Johnson",photo:"https://picsum.photos/203"},{type:"budget",label:"Budget",value:"$400"},{type:"timeFrame",label:"Time Frame",value:"4 months"}],borderColor:"#4784fc"}],toggleColumn:!0,action:{label:"+ Add Experiment",event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},{id:3,heading:"Done",tasks:[{id:5,header:[{type:"link",label:"EP-5",url:"https://fifth-example.com"},{type:"chip",value:[{value:"Tag 7",backgroundColor:"pink",foregroundColor:"#000000"}]}],body:{description:"Description for Completed Task 1"},footer:[{type:"avatar",label:"Sarah Adams",photo:"https://picsum.photos/204"},{type:"budget",label:"Budget",value:"$500"},{type:"timeFrame",label:"Time Frame",value:"5 months"}],borderColor:"#FFCA11"},{id:6,header:[{type:"link",label:"EP-6333",url:"https://sixth-example.com"},{type:"chip",value:[{value:"Tag 8",backgroundColor:"yellow",foregroundColor:"#000000"}]}],body:{description:"Description for Completed Task 2"},footer:[{type:"avatar",label:"Emily Wilson",photo:"https://picsum.photos/205"},{type:"budget",label:"Budget",value:"$600"},{type:"timeFrame",label:"Time Frame",value:"6 months"}],borderColor:"#4784fc"}],toggleColumn:!0}]}},Swimlane={parameters:{docs:{description:{story:"This example showcases the swimlane features of the Kanban component. The property panel allows you to sort cards, enable drag-and-drop across swimlanes, display or hide empty rows, view item counts, and manage swimlane frozen rows. Additionally, you can expand or collapse swimlane rows within the Kanban board."}}},args:{data:[{id:1,heading:"User Journey",columns:[{id:1,heading:"To Do",tasks:[{id:1,header:[{type:"link",label:"EP-1",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"User-Perceived Value Validation. User-Perceived Value Validation"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:2,header:[{type:"link",label:"EP-2",url:"https://another-example.com"},{type:"chip",value:[{value:"Tag 3",backgroundColor:"green"},{value:"Tag 4",backgroundColor:"orange"}]}],body:{description:"Description for Task 2"},footer:[{type:"avatar",label:"John Doe",photo:"https://picsum.photos/200"},{type:"budget",label:"Budget",value:"$200"},{type:"timeFrame",label:"Time Frame",value:"2 months"}],borderColor:"#4784fc"}],toggleColumn:!0,action:{label:"+ Add experiment",event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},{id:2,heading:"In Progress",tasks:[{id:3,header:[{type:"link",label:"EP-3",url:"https://third-example.com"},{type:"chip",value:[{value:"Tag 5",backgroundColor:"purple"}]}],body:{description:"Description for Task 3"},footer:[{type:"avatar",label:"Jane Smith",photo:"https://picsum.photos/202"},{type:"budget",label:"Budget",value:"$300"},{type:"timeFrame",label:"Time Frame",value:"3 months"}],borderColor:"#FFCA11"},{id:4,header:[{type:"link",label:"EP-4",url:"https://fourth-example.com"},{type:"chip",value:[{value:"Tag 6",backgroundColor:"brown"}]}],body:{description:"User-Perceived Value Validation"},footer:[{type:"avatar",label:"Michael Johnson",photo:"https://picsum.photos/203"},{type:"budget",label:"Budget",value:"$400"},{type:"timeFrame",label:"Time Frame",value:"4 months"}],borderColor:"#4784fc"}],toggleColumn:!0},{id:3,heading:"Done",tasks:[{id:5,header:[{type:"link",label:"EP-5",url:"https://fifth-example.com"},{type:"chip",value:[{value:"Tag 7",backgroundColor:"pink",foregroundColor:"#000000"}]}],body:{description:"Description for Completed Task 1"},footer:[{type:"avatar",label:"Sarah Adams",photo:"https://picsum.photos/204"},{type:"budget",label:"Budget",value:"$500"},{type:"timeFrame",label:"Time Frame",value:"5 months"}],borderColor:"#FFCA11"},{id:6,header:[{type:"link",label:"EP-6333",url:"https://sixth-example.com"},{type:"chip",value:[{value:"Tag 8",backgroundColor:"yellow",foregroundColor:"#000000"}]}],body:{description:"Description for Completed Task 2"},footer:[{type:"avatar",label:"Emily Wilson",photo:"https://picsum.photos/205"},{type:"budget",label:"Budget",value:"$600"},{type:"timeFrame",label:"Time Frame",value:"6 months"}],borderColor:"#4784fc"}],toggleColumn:!0}]},{id:2,heading:"Technical Implementation",columns:[{id:1,heading:"To Do",tasks:[{id:7,header:[{type:"link",label:"EP-7",url:"https://example.com"},{type:"chip",value:[{value:"Tag 9",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 10",backgroundColor:"#009042"}]}],body:{description:"New Task in To Do"},footer:[{type:"avatar",label:"Alice Brown",photo:"https://picsum.photos/206"},{type:"budget",label:"Budget",value:"$150"},{type:"timeFrame",label:"Time Frame",value:"1.5 months"}],borderColor:"#4784fc"}],toggleColumn:!0,action:{label:"+ Add task",event:($event,column)=>{console.log("Added new task action performed: ",column,$event)}}},{id:2,heading:"In Progress",tasks:[{id:8,header:[{type:"link",label:"EP-8",url:"https://example.com"},{type:"chip",value:[{value:"Tag 11",backgroundColor:"blue"}]}],body:{description:"New Task in Progress"},footer:[{type:"avatar",label:"Bob Smith",photo:"https://picsum.photos/207"},{type:"budget",label:"Budget",value:"$250"},{type:"timeFrame",label:"Time Frame",value:"2.5 months"}],borderColor:"#FFCA11"}],toggleColumn:!0},{id:3,heading:"Done",tasks:[{id:9,header:[{type:"link",label:"EP-9",url:"https://example.com"},{type:"chip",value:[{value:"Tag 12",backgroundColor:"red",foregroundColor:"#ffffff"}]}],body:{description:"New Completed Task"},footer:[{type:"avatar",label:"Charlie Green",photo:"https://picsum.photos/208"},{type:"budget",label:"Budget",value:"$350"},{type:"timeFrame",label:"Time Frame",value:"3.5 months"}],borderColor:"#4784fc"}],toggleColumn:!0}]}],type:"swimlane"}},Workflow={parameters:{docs:{description:{story:"This example demonstrates the functionalities of a hierarchical structure with opportunities as root nodes, each having multiple solutions as children, and each solution further having multiple experiments. By interacting with the nodes, you can explore the relationships, revealing the hierarchy and flow."}}},args:{data:[{opportunity:{id:1,header:[{type:"link",label:"EP-1",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"To assess whether users perceive a high value from using Shorter Loop."},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc",action:{label:"+ Add Solution",icon:SVG_ICON,event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},solutions:[{solution:{id:1,header:[{type:"link",label:"EP-1",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Solution 1.1"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc",action:{label:"+ Add Experiment",icon:SVG_ICON,event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},experiments:[{id:1,header:[{type:"link",label:"EX-98",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.1.1"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:1,header:[{type:"link",label:"EX-199",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.1.2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:1,header:[{type:"link",label:"EX-200",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.1.3"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"}]},{solution:{id:1,header:[{type:"link",label:"EP-1",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Solution 1.2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc",action:{label:"+ Add Experiment",icon:SVG_ICON,event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},experiments:[{id:3,header:[{type:"link",label:"EX-98",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.2.1"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:4,header:[{type:"link",label:"EX-99",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.2.2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:5,header:[{type:"link",label:"EX-100",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.2.3"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"}]}]},{opportunity:{id:2,header:[{type:"link",label:"EP-400",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Opportunity 2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc",action:{label:"+ Add Solution",icon:SVG_ICON,event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},solutions:[{solution:{id:1,header:[{type:"link",label:"EP-1000",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Solution 1.2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc",action:{label:"+ Add Experiment",icon:SVG_ICON,event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},experiments:[{id:1,header:[{type:"link",label:"EX-98",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.1.1"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"}]},{solution:{id:1,header:[{type:"link",label:"EP-1",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Solution 2.2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc",action:{label:"+ Add Solution",icon:SVG_ICON,event:($event,column)=>{console.log("Added new experiment action performed: ",column,$event)}}},experiments:[{id:3,header:[{type:"link",label:"EX-98",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.2.1"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"},{id:4,header:[{type:"link",label:"EX-99",url:"https://example.com"},{type:"chip",value:[{value:"Tag 1",backgroundColor:"#FFF1F1",foregroundColor:"#D3272A"},{value:"Tag 2",backgroundColor:"#009042"}]}],body:{description:"Experiment 1.2.2"},footer:[{type:"avatar",label:"Dinesh Rawat",photo:"https://picsum.photos/201"},{type:"budget",label:"Budget",value:"$100"},{type:"timeFrame",label:"Time Frame",value:"1 month"}],borderColor:"#4784fc"}]}]}],tableHeaders:[{label:"Opportunities",toggleColumn:!0},{label:"Solutions",toggleColumn:!0},{label:"Experiments",toggleColumn:!0}],type:"workflow"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'This example illustrates the default functionalities of the Kanban component. You can drag and drop cards across different states of the Kanban board by default.'\n      }\n    }\n  },\n  args: {\n    data: kanbanData\n  }\n}",...Default.parameters?.docs?.source}}},Swimlane.parameters={...Swimlane.parameters,docs:{...Swimlane.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'This example showcases the swimlane features of the Kanban component. The property panel allows you to sort cards, enable drag-and-drop across swimlanes, display or hide empty rows, view item counts, and manage swimlane frozen rows. Additionally, you can expand or collapse swimlane rows within the Kanban board.'\n      }\n    }\n  },\n  args: {\n    data: kanbanDataWithSwimlanes,\n    type: \"swimlane\"\n  }\n}",...Swimlane.parameters?.docs?.source}}},Workflow.parameters={...Workflow.parameters,docs:{...Workflow.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      description: {\n        story: 'This example demonstrates the functionalities of a hierarchical structure with opportunities as root nodes, each having multiple solutions as children, and each solution further having multiple experiments. By interacting with the nodes, you can explore the relationships, revealing the hierarchy and flow.'\n      }\n    }\n  },\n  args: {\n    data: workflowItems,\n    tableHeaders,\n    type: \"workflow\"\n  }\n}",...Workflow.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Swimlane","Workflow"]},"./src/stories/kanban/kanban.component.css?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"* {\n  font-family: system-ui;\n  margin: 0;\n  padding: 0;\n}\n\n.kanban-board {\n  display: flex;\n}\n\n.kanban_board_collapsed {\n  gap: 10px;\n}\n\n.kanban-column {\n  background-color: #ffffff;\n  border: 1px solid #e0e0e0;\n  overflow: hidden;\n  border-right: none;\n  /* border-bottom: none; */\n}\n\n.kanban-column:last-child {\n  border-right: 1px solid #e0e0e0;\n}\n\n.kanban-column:hover .kanban-column-action {\n  visibility: visible;\n}\n\nh2 {\n  /* border-bottom: 1px solid #e0e0e0; */\n  border-right: none;\n  margin: 0;\n  padding: 16px 0 16px 16px;\n  background-color: #ffffff;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n}\n\n/*\n.kanban-column:last-child h2 {\n  border-right: 1px solid #e0e0e0;\n} */\n\n.kanban-column-data {\n  padding: 16px;\n  border-top: 1px solid #e0e0e0;\n  /* border-bottom: none !important;\n  border-right: none !important;\n  border-left: none !important; */\n}\n\n.kanban-column-data:first-child {\n  border-left: none !important;\n  border-right: none !important;\n  border-bottom: none !important;\n}\n\n.kanban-column-data:not(:last-child) {\n  border-right: none !important;\n  border-bottom: none !important;\n}\n\n/*\n.kanban-column:last-child .kanban-column-data {\n  border-right: 1px solid #e0e0e0;\n} */\n\n.kanban-column.collapsed .kanban-column-data {\n  display: none;\n  /* Hide the column data when collapsed */\n}\n\n.kanban-column:nth-child(odd) {\n  background-color: #f8f6ff;\n}\n\n.kanban-list {\n  min-height: 200px;\n  height: 100%;\n}\n\n.kanban-item {\n  position: relative;\n  justify-content: space-between;\n  padding: 10px 8px;\n  min-height: 41px;\n  background: #fff;\n  border-radius: 4px;\n  border: 1px solid #e0e0e0;\n  margin-bottom: 10px;\n  font-size: 14px;\n}\n\n.cdk-drag.kanban-item {\n  cursor: grab;\n}\n\n.cdk-drag.kanban-item:active,\n.kanban-board:active {\n  cursor: grabbing;\n}\n\n.icon_center {\n  justify-content: center !important;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.link {\n  margin-right: 3px;\n}\n\n.link a {\n  font-style: normal;\n  font-weight: 700;\n  line-height: 140%;\n  text-transform: capitalize;\n  text-decoration: none;\n  white-space: nowrap;\n  max-width: -moz-fit-content;\n  max-width: fit-content;\n  color: #573df4;\n  float: left;\n  margin-right: 5px;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.chip-container {\n  color: #ffffff;\n  margin-right: 5px;\n}\n\n.chip-container .chip {\n  color: #fff;\n  text-align: center;\n  font-size: 10px;\n  margin-right: 5px;\n  padding: 4px 8px;\n  border-radius: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  text-transform: uppercase;\n}\n\n.task-body {\n  color: #323232;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 140%;\n  min-height: 40px;\n  margin: 14px 0;\n}\n\n.task-footer {\n  display: flex;\n  gap: 3px;\n  align-items: center;\n  font-size: 11px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 130%;\n  color: #230f9f;\n}\n\n.task-footer div:not(:last-child)::after {\n  content: '·';\n  margin-right: 5px;\n  font-size: 12px;\n}\n\n.avatar {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.avatar img {\n  width: 21px;\n  height: 21px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.kanban-column-action {\n  visibility: hidden;\n  font-style: normal;\n  line-height: 140%;\n  text-transform: uppercase;\n  text-decoration: none;\n  white-space: nowrap;\n  max-width: -moz-fit-content;\n  max-width: fit-content;\n  color: #573df4;\n  float: left;\n  margin-right: 5px;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  font-size: 14px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  display: block;\n}\n\n.expand-icon {\n  cursor: pointer;\n  margin-right: 5px;\n  font-size: 18px;\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.expand-icon svg {\n  width: 18px;\n  border: 1px solid transparent;\n  height: 18px;\n  padding: 5px;\n}\n\n.expand-icon svg:hover {\n  background: #f0f0f0;\n  border: 1px solid rgba(0, 0, 0, 0);\n  border-radius: 4px;\n  box-shadow: none;\n  color: #0f6cbd;\n}\n\n.vertical-writing {\n  color: #616161;\n  font-size: 12px;\n  font-weight: 600;\n  overflow: hidden;\n  padding: 12px;\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  writing-mode: vertical-lr;\n  left: 25%;\n}\n\n.swimlane-section {\n  border-left: 1px solid #e0e0e0;\n  border-right: 1px solid #e0e0e0;\n  border-bottom: 1px solid #e0e0e0;\n}\n\nsummary {\n  padding: 16px;\n  background-color: #FAFAFA;\n  cursor: pointer;\n}\n\ndetails:not(:first-child) {\n  border-top: 1px solid #e0e0e0;\n}\n\n.swimlane-section .kanban-column-data {\n  border: 1px solid #e0e0e0;\n  /* border-left: none; */\n}\n\n.swimlane-section .kanban-column-data:last-child {\n  border-right: none;\n  border-bottom: none;\n}\n\n.padding_0 {\n  padding: 0;\n}\n\n.padding_0:first-child {\n  border: 1px solid #e0e0e0 !important;\n  border-bottom: none !important;\n  border-right: none !important;\n  border-left: none !important;\n}\n\n.padding_0:last-child {\n  border: 1px solid #e0e0e0 !important;\n}\n\nh2.collapsed {\n  padding-left: 0 !important;\n}\n\nh2:not(.collapsed) {\n  padding-right: 16px !important;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth {\n  background-color: #ffffff;\n  padding: 0;\n}\n\nth,\nth,\ntd {\n  border: 1px solid #e0e0e0;\n  padding: 16px;\n  text-align: left;\n}\n\ntd {\n  vertical-align: top;\n}\n\n.swimlane-section .kanban-column-data:nth-child(odd) {\n  background-color: #f8f6ff;\n}\n\n.odd-section {\n  background-color: #f8f6ff;\n}\n\n.workflow-kanban-action a {\n  font-style: normal;\n  line-height: 140%;\n  text-transform: capitalize;\n  text-decoration: none;\n  white-space: nowrap;\n  max-width: -moz-fit-content;\n  max-width: fit-content;\n  color: #573df4;\n  float: left;\n  margin-right: 5px;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n  font-size: 14px;\n  cursor: pointer;\n  float: right;\n}\n\n.d-flex {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);